not-wf-sa-003 003.xml   Processing Instruction target name is required.
not-wf-sa-025 025.xml   Text may not contain a literal ']]>' sequence. 
not-wf-sa-026 026.xml   Text may not contain a literal ']]>' sequence. 
not-wf-sa-029 029.xml   Text may not contain a literal ']]>' sequence. 
not-wf-sa-030 030.xml   A form feed is not a legal XML character. 
not-wf-sa-031 031.xml   A form feed is not a legal XML character. 
not-wf-sa-032 032.xml   A form feed is not a legal XML character. 
not-wf-sa-033 033.xml   An ESC (octal 033) is not a legal XML character. 
not-wf-sa-037 037.xml   Character references may not appear after the root element. 
not-wf-sa-040 040.xml   Provides two document elements.
not-wf-sa-041 041.xml   Provides two document elements.
not-wf-sa-044 044.xml   Provides two document elements.
not-wf-sa-048 048.xml   Provides a CDATA section after the root element.
not-wf-sa-051 051.xml   CDATA is invalid at top level of document.
not-wf-sa-052 052.xml   Invalid character reference. 
not-wf-sa-054 054.xml   PUBLIC requires two literals.
not-wf-sa-056 056.xml   Invalid Document Type Definition format - misplaced comment. 
not-wf-sa-057 057.xml   This isn't SGML; comments can't exist in declarations. 
not-wf-sa-058 058.xml   Invalid character , in ATTLIST enumeration 
not-wf-sa-059 059.xml   String literal must be in quotes. 
not-wf-sa-060 060.xml   Invalid type NAME defined in ATTLIST.
not-wf-sa-061 061.xml   External entity declarations require whitespace between public  and system IDs.
not-wf-sa-062 062.xml   Entity declarations need space after the entity name. 
not-wf-sa-064 064.xml   Space is required between attribute type and default values  in <!ATTLIST...> declarations. 
not-wf-sa-065 065.xml   Space is required between attribute name and type  in <!ATTLIST...> declarations. 
not-wf-sa-066 066.xml   Required whitespace is missing. 
not-wf-sa-067 067.xml   Space is required between attribute type and default values  in <!ATTLIST...> declarations. 
not-wf-sa-068 068.xml   Space is required between NOTATION keyword and list of  enumerated choices in <!ATTLIST...> declarations. 
not-wf-sa-069 069.xml   Space is required before an NDATA entity annotation.
not-wf-sa-078 078.xml   Undefined ENTITY foo. 
not-wf-sa-079 079.xml   ENTITY can't reference itself directly or indirectly. 
not-wf-sa-080 080.xml   ENTITY can't reference itself directly or indirectly. 
not-wf-sa-082 082.xml   This tests the No External Entity References WFC,  since the entity is referred to within an attribute. 
not-wf-sa-084 084.xml   Tests the Parsed Entity WFC by referring to an  unparsed entity. (This precedes the error of not declaring  that entity's notation, which may be detected any time before  the DTD parsing is completed.) 
not-wf-sa-085 085.xml   Public IDs may not contain "[". 
not-wf-sa-086 086.xml   Public IDs may not contain "[". 
not-wf-sa-087 087.xml   Public IDs may not contain "[". 
not-wf-sa-089 089.xml   Parameter entities "are" always parsed; NDATA annotations  are not permitted.
not-wf-sa-091 091.xml   Parameter entities "are" always parsed; NDATA annotations  are not permitted.
not-wf-sa-096 096.xml   Space is required before the standalone declaration. 
not-wf-sa-101 101.xml   Space is not permitted in an encoding name. 
not-wf-sa-105 105.xml   Invalid placement of CDATA section. 
not-wf-sa-106 106.xml   Invalid placement of entity declaration. 
not-wf-sa-113 113.xml   Parameter entity values must use valid reference syntax;  this reference is malformed.
not-wf-sa-114 114.xml   General entity values must use valid reference syntax;  this reference is malformed.
not-wf-sa-121 121.xml   A name of an ENTITY was started with an invalid character. 
not-wf-sa-122 122.xml   Invalid syntax mixed connectors are used. 
not-wf-sa-123 123.xml   Invalid syntax mismatched parenthesis. 
not-wf-sa-124 124.xml   Invalid format of Mixed-content declaration. 
not-wf-sa-125 125.xml   Invalid syntax extra set of parenthesis not necessary. 
not-wf-sa-126 126.xml   Invalid syntax Mixed-content must be defined as zero or more. 
not-wf-sa-127 127.xml   Invalid syntax Mixed-content must be defined as zero or more. 
not-wf-sa-128 128.xml   Invalid CDATA syntax. 
not-wf-sa-129 129.xml   Invalid syntax for Element Type Declaration. 
not-wf-sa-130 130.xml   Invalid syntax for Element Type Declaration. 
not-wf-sa-131 131.xml   Invalid syntax for Element Type Declaration. 
not-wf-sa-132 132.xml   Invalid syntax mixed connectors used. 
not-wf-sa-133 133.xml   Illegal whitespace before optional character causes syntax error. 
not-wf-sa-134 134.xml   Illegal whitespace before optional character causes syntax error. 
not-wf-sa-135 135.xml   Invalid character used as connector. 
not-wf-sa-136 136.xml   Tag omission is invalid in XML. 
not-wf-sa-137 137.xml   Space is required before a content model. 
not-wf-sa-138 138.xml   Invalid syntax for content particle. 
not-wf-sa-139 139.xml   The element-content model should not be empty. 
not-wf-sa-143 143.xml   Character #x001F is not legal anywhere in an XML document. 
not-wf-sa-144 144.xml   Character #xFFFF is not legal anywhere in an XML document. 
not-wf-sa-147 147.xml   XML Declaration may not be preceded by whitespace.
not-wf-sa-148 148.xml   XML Declaration may not be preceded by comments or whitespace.
not-wf-sa-149 149.xml   XML Declaration may not be within a DTD.
not-wf-sa-154 154.xml   '<?XML ...?>' is neither an XML declaration  nor a legal processing instruction target name. 
not-wf-sa-155 155.xml   '<?xmL ...?>' is neither an XML declaration  nor a legal processing instruction target name. 
not-wf-sa-158 158.xml   SGML-ism: "#NOTATION gif" can't have attributes. 
not-wf-sa-160 160.xml   Violates the PEs in Internal Subset WFC  by using a PE reference within a declaration. 
not-wf-sa-161 161.xml   Violates the PEs in Internal Subset WFC  by using a PE reference within a declaration. 
not-wf-sa-162 162.xml   Violates the PEs in Internal Subset WFC  by using a PE reference within a declaration. 
not-wf-sa-164 164.xml   Invalid placement of Parameter entity reference. 
not-wf-sa-165 165.xml   Parameter entity declarations must have a space before  the '%'. 
not-wf-sa-166 166.xml   Character FFFF is not legal anywhere in an XML document. 
not-wf-sa-167 167.xml   Character FFFE is not legal anywhere in an XML document. 
not-wf-sa-171 171.xml   Character FFFF is not legal anywhere in an XML document. 
not-wf-sa-172 172.xml   Character FFFF is not legal anywhere in an XML document. 
not-wf-sa-173 173.xml   Character FFFF is not legal anywhere in an XML document. 
not-wf-sa-174 174.xml   Character FFFF is not legal anywhere in an XML document. 
not-wf-sa-175 175.xml   Character FFFF is not legal anywhere in an XML document. 
not-wf-sa-177 177.xml   Character FFFF is not legal anywhere in an XML document. 
not-wf-sa-180 180.xml   The Entity Declared WFC requires entities to be declared  before they are used in an attribute list declaration. 
not-wf-sa-183 183.xml   Mixed content declarations may not include content particles.
not-wf-sa-184 184.xml   In mixed content models, element names must not be  parenthesized. 
not-wf-sa-186 186.xml   Whitespace is required between attribute/value pairs. 
not-wf-not-sa-001 001.xml   Conditional sections must be properly terminated ("]>" used  instead of "]]>"). 
not-wf-not-sa-002 002.xml   Processing instruction target names may not be "XML"  in any combination of cases. 
not-wf-not-sa-003 003.xml   Conditional sections must be properly terminated ("]]>" omitted). 
not-wf-not-sa-004 004.xml   Conditional sections must be properly terminated ("]]>" omitted). 
not-wf-not-sa-005 005.xml   Tests the Entity Declared VC by referring to an  undefined parameter entity within an external entity.
not-wf-not-sa-006 006.xml   Conditional sections need a '[' after the INCLUDE or IGNORE. 
not-wf-not-sa-007 007.xml   A <!DOCTYPE ...> declaration may not begin any external  entity; it's only found once, in the document entity.
not-wf-not-sa-008 008.xml   In DTDs, the '%' character must be part of a parameter  entity reference.
not-wf-not-sa-009 009.xml   This test violates WFC:PE Between Declarations in Production 28a.  The last character of a markup declaration is not contained in the same  parameter-entity text replacement.
valid-sa-012 012.xml   Uses a legal XML 1.0 name consisting of a single colon  character (disallowed by the latest XML Namespaces draft).; 5:7 Qualified name is invalid: :
valid-sa-023 023.xml   Test demonstrates that Entity References are valid element content. ; 5:8 Unexpected entity: e
valid-sa-024 024.xml   Test demonstrates that Entity References are valid element content and also demonstrates a valid Entity Declaration. ; 6:8 Unexpected entity: e
valid-sa-049 049.xml   Test demonstrates that characters outside of normal ascii range can be used as element content. ; 1:1 invalid utf-8 sequence of 1 bytes from index 0
valid-sa-050 050.xml   Test demonstrates that characters outside of normal ascii range can be used as element content. ; 1:1 invalid utf-8 sequence of 1 bytes from index 0
valid-sa-051 051.xml   The document is encoded in UTF-16 and uses some name  characters well outside of the normal ASCII range.  ; 1:1 invalid utf-8 sequence of 1 bytes from index 0
valid-sa-053 053.xml   Tests inclusion of a well-formed internal entity, which  holds an element required by the content model.; 6:8 Unexpected entity: e
valid-sa-066 066.xml   Expands a CDATA attribute with a character reference.; 7:13 Unexpected entity: e1
valid-sa-068 068.xml   Tests definition of an internal entity holding a carriage return character  reference, which must not be normalized before reporting to the application. Line  break normalization only occurs when parsing external parsed entities.; 5:8 Unexpected entity: e
valid-sa-085 085.xml   Parameter and General entities use different namespaces,  so there can be an entity of each type with a given name.; 6:8 Unexpected entity: e
valid-sa-086 086.xml   Tests whether entities may be declared more than once,  with the first declaration being the binding one. ; 6:8 Unexpected entity: e
valid-sa-087 087.xml   Tests whether character references in internal entities are  expanded early enough, by relying on correct handling to  make the entity be well formed.; 6:8 Unexpected entity: e
valid-sa-088 088.xml   Tests whether entity references in internal entities are  expanded late enough, by relying on correct handling to  make the expanded text be valid. (If it's expanded too  early, the entity will parse as an element that's not  valid in that context.); 5:8 Unexpected entity: e
valid-sa-089 089.xml   Tests entity expansion of three legal character references,  which each expand to a Unicode surrogate pair.; 5:8 Unexpected entity: e
valid-sa-108 108.xml   This tests normalization of end-of-line characters (CRLF)  within entities to LF, primarily as an output test. ; 7:12 Unexpected entity: e
valid-sa-110 110.xml   Basically an output test, this requires that a CDATA  attribute with a CRLF be normalized to one space.; 6:12 Unexpected entity: e
valid-sa-114 114.xml   Test demonstrates that all text within a valid CDATA section is considered text and not recognized as markup. ; 5:8 Unexpected entity: e
valid-sa-115 115.xml   Test demonstrates that an entity reference is processed by recursively processing the replacement text of the entity. ; 6:9 Unexpected entity: e1
valid-sa-117 117.xml   Test demonstrates that entity expansion is done while processing entity declarations. ; 5:11 Unexpected entity: rsqb
valid-sa-118 118.xml   Test demonstrates that entity expansion is done while processing entity declarations. ; 5:11 Unexpected entity: rsqb
valid-not-sa-031 031.xml   Expands a general entity which contains a CDATA section with  what looks like a markup declaration (but is just text since  it's in a CDATA section).; 2:8 Unexpected entity: e
valid-ext-sa-001 001.xml   A combination of carriage return line feed in an external entity must  be normalized to a single newline. ; 5:8 Unexpected entity: e
valid-ext-sa-002 002.xml   A carriage return (also CRLF) in an external entity must  be normalized to a single newline. ; 5:8 Unexpected entity: e
valid-ext-sa-003 003.xml   Test demonstrates that the content of an element can be empty. In this case the external entity is an empty file. ; 5:8 Unexpected entity: e
valid-ext-sa-004 004.xml   A carriage return (also CRLF) in an external entity must  be normalized to a single newline. ; 5:8 Unexpected entity: e
valid-ext-sa-005 005.xml   Test demonstrates the use of optional character and content particles within an element content. The test also show the use of external entity. ; 6:8 Unexpected entity: e
valid-ext-sa-006 006.xml   Test demonstrates the use of optional character and content particles within mixed element content. The test also shows the use of an external entity and that a carriage control line feed in an external entity must be normalized to a single newline. ; 6:8 Unexpected entity: e
valid-ext-sa-007 007.xml   Test demonstrates the use of external entity and how replacement text is retrieved and processed. ; 5:9 Unexpected entity: e
valid-ext-sa-008 008.xml  Test demonstrates the use of external entity and how replacement text is retrieved and processed. Also tests the use of an EncodingDecl of UTF-16.; 5:9 Unexpected entity: e
valid-ext-sa-009 009.xml   A carriage return (also CRLF) in an external entity must  be normalized to a single newline. ; 5:8 Unexpected entity: e
valid-ext-sa-011 011.xml   Test demonstrates the use of a public identifier with and external entity. The test also show that a carriage control line feed combination in an external entity must be normalized to a single newline. ; 5:8 Unexpected entity: e
valid-ext-sa-012 012.xml   Test demonstrates both internal and external entities and that processing of entity references may be required to produce the correct replacement text.; 9:9 Unexpected entity: e1
valid-ext-sa-013 013.xml   Test demonstrates that whitespace is handled by adding a single whitespace to the normalized value in the attribute list. ; 10:8 Unexpected entity: x
valid-ext-sa-014 014.xml   Test demonstrates use of characters outside of normal ASCII range.; 5:8 Unexpected entity: e
